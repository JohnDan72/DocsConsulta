* instalar imagen desde doker hub
    * elige la(s) imagen(es) que quieres descargar e instalalas en un archivo .yml
        * file:
            version: '3.1'
            services:

              db:
                container_name: postgres_ctn
                image: postgres
                restart: always
                environment:
                ports: 
                  - 5432:5432
                environment:
                  POSTGRES_USER: postgres_user
                  POSTGRES_PASSWORD: 123456
                  POSTGRES_DB: example_db

              adminer:
                container_name: adminer_ctn
                image: adminer
                restart: always
                depends_on:
                  - db
                ports:
                  - 9090:8080
    * run: docker-compose -f <path-file>.yml pull
    * check images:
      * docker image ls
    * up containers en segundo plano:
      docker-compose -f .\postgres.yml up -d

* subir imagen a nuestro repo en dockerhub
  * se crea un nuevo tag para el repo
    docker tag <imagen>:<tag> <nuevo-nombre>:<nuevo-tag>
  * login
    docker login
  * docker push <repo-name>:<tag-name>
        
* scalling containers (escala a 3 servicios de front-end, se debe mofdificar el 
  file .yml para evitar conflicto en el nombre del container y del mapeo de puertos)
    * docker-compose -f ./stackbilling.yml up --scale billing-front=3 -d --force-recreate
    * lo mismo pero desde el archivo .yml
      * agregar el siguiente atributo en el servicio corresondiente
        deploy:
          replicas: 3
          resources: 
            limits:
              #indica el 10% de todo el cpu
              cpus: "0.15"
              memory: 250M
            reservations:
              cpus: 0.1
              memory: 128M
          
